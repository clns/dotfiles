#!/bin/sh

help() {
cat <<HELP
Usage:
 git commit-msg [<options>]

Options:
 -g <no>    Filter commits with subject greater than <no> chars
 -c         Commit hashes or revision range
 -f         The format to send to git-show; ignored if -e is used
 -e         Edit the commit message; to abort a batch edit, simply leave a
            message unchanged and exit the editor

Examples:
 git commit-msg -g 50
 git commit-msg -g 50 -f '--oneline' | awk '{ printf \$0 " "; \$1=""; print "(" length(\$0) ")" }'
 git commit-msg -c '39ae4f6 084d119'
 git commit-msg -c 'HEAD~2..'
 git commit-msg -c "\$(g log --pretty='%h' -E --grep='Make' --branches)"

 * All examples accept the -e option to edit the filtered commits.

Notes:
 Editing a commit message WILL CHANGE THE COMMIT HASH for that commit and
 all subsequent commits. For this reason you should only change commits
 that exist locally and were never pushed to a remote server.

Revision range:
 - single commit: <rev>^!, e.g. HEAD^! 55152c7^!
 See http://git-scm.com/docs/gitrevisions for more details.

HELP
}

if [ "$#" = "0" ]; then help; exit 0; fi

git_editor() {
	if test -z "${GIT_EDITOR:+set}"
	then
		GIT_EDITOR="$(git var GIT_EDITOR)" || return $?
	fi
	eval "$GIT_EDITOR" '"$@"'
}

cmd="git log --pretty='%H'"
format=
tmp_dir=
while getopts "g:c:f:e" opt; do
    case $opt in
        g)
            cmd="git log --branches -E --grep='^.{$OPTARG,}' --pretty='%H %s' \
| awk '{h=\$1; \$1=\"\"; if (length(\$0)>$OPTARG) print h }'"
            ;;
        e)
            tmp_dir=$(mktemp -d 2>/dev/null || \
                mktemp -d -t 'commit-msg-edit' 2>/dev/null || \
                (dir="/tmp/commit-msg-$$"; mkdir -p "$dir" && echo "$dir"))
            if [ "$?" != "0" ] || [ ! -d "$tmp_dir" ]; then
                echo "Cannot create tmp dir" >&2; exit 1
            fi
            ;;
        c)
            cmd="git show -s --format='%H %at' $OPTARG | sort -k2 -g -r | cut -f 1 -d ' '"
            ;;
        f)
            format="$OPTARG"
            ;;
        \?) help >&2 ; exit 1 ;;
    esac
done
shift $((OPTIND-1))

if [ "$tmp_dir" ]; then # it's an edit
    for sha in $(eval "$cmd"); do
        raw="$(git show -s --format='%B' $sha)"
        file="$tmp_dir/$sha"
        echo "$raw" > "$file"
        git_editor "$file"

        if [ "$?" != "0" ]; then rm -rf "$tmp_dir"; echo "Failed to edit file" >&2; exit 1; fi
        if [ "$(cat $file)" = "$raw" ]; then
            rm "$file"
            printf "Do you want to continue? If you choose no, nothing will be changed. [n] "
            read -n 1 REPLY
            if [ "$REPLY" = "n" ]; then
                echo " aborted..."; exit 0
            fi
        fi
    done

    # Change commit messages starting from the oldest commit
    # and use all available branches
    git filter-branch -f --msg-filter 'dir='"$tmp_dir"'
file="$dir/$GIT_COMMIT";
if [ -e "$file" ]; then
    cat "$file";
else
    cat;
fi' -- $sha^.. --branches

    rm -rf "$tmp_dir"
else
    git show -s $format $(eval "$cmd")
fi
